
// (C) Copyright IBM Corporation 2007
// 
// This file is part of the Eclipse IMP.

package org.eclipse.imp.java.parser;

public class JavaLexerprs implements lpg.runtime.ParseTable, JavaLexersym {
    public final static int ERROR_SYMBOL = 0;
    public final int getErrorSymbol() { return ERROR_SYMBOL; }

    public final static int SCOPE_UBOUND = 0;
    public final int getScopeUbound() { return SCOPE_UBOUND; }

    public final static int SCOPE_SIZE = 0;
    public final int getScopeSize() { return SCOPE_SIZE; }

    public final static int MAX_NAME_LENGTH = 0;
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int NUM_STATES = 67;
    public final int getNumStates() { return NUM_STATES; }

    public final static int NT_OFFSET = 102;
    public final int getNtOffset() { return NT_OFFSET; }

    public final static int LA_STATE_OFFSET = 902;
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }

    public final static int MAX_LA = 1;
    public final int getMaxLa() { return MAX_LA; }

    public final static int NUM_RULES = 354;
    public final int getNumRules() { return NUM_RULES; }

    public final static int NUM_NONTERMINALS = 39;
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }

    public final static int NUM_SYMBOLS = 141;
    public final int getNumSymbols() { return NUM_SYMBOLS; }

    public final static int SEGMENT_SIZE = 8192;
    public final int getSegmentSize() { return SEGMENT_SIZE; }

    public final static int START_STATE = 355;
    public final int getStartState() { return START_STATE; }

    public final static int IDENTIFIER_SYMBOL = 0;
    public final int getIdentifier_SYMBOL() { return IDENTIFIER_SYMBOL; }

    public final static int EOFT_SYMBOL = 99;
    public final int getEoftSymbol() { return EOFT_SYMBOL; }

    public final static int EOLT_SYMBOL = 103;
    public final int getEoltSymbol() { return EOLT_SYMBOL; }

    public final static int ACCEPT_ACTION = 547;
    public final int getAcceptAction() { return ACCEPT_ACTION; }

    public final static int ERROR_ACTION = 548;
    public final int getErrorAction() { return ERROR_ACTION; }

    public final static boolean BACKTRACK = false;
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int getStartSymbol() { return lhs(0); }
    public final boolean isValidForParser() { return JavaLexersym.isValidForParser; }


    public interface IsNullable {
        public final static byte isNullable[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,1,0,0,0,0,0,1,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static byte isNullable[] = IsNullable.isNullable;
    public final boolean isNullable(int index) { return isNullable[index] != 0; }

    public interface ProsthesesIndex {
        public final static byte prosthesesIndex[] = {0,
            25,26,33,29,30,31,14,19,21,28,
            32,17,20,22,27,36,39,2,3,4,
            5,6,7,8,9,10,11,12,13,15,
            16,18,23,24,34,35,37,38,1
        };
    };
    public final static byte prosthesesIndex[] = ProsthesesIndex.prosthesesIndex;
    public final int prosthesesIndex(int index) { return prosthesesIndex[index]; }

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static byte baseCheck[] = {0,
            1,3,3,1,1,1,1,5,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2,2,2,2,2,2,
            2,2,3,2,2,2,2,2,2,2,
            2,3,3,4,2,2,1,3,2,4,
            1,2,2,3,2,3,2,2,3,3,
            2,3,2,2,0,1,2,2,2,0,
            2,1,2,1,2,2,2,3,2,3,
            3,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2,3,1,1,
            1,1,1,1,1,1,1,1,1,2,
            1,2,2,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,6,2,1,1,1,
            1,1,1,1,6,2,2,2,2,2,
            2,2,2,2
        };
    };
    public final static byte baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static byte rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            18,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,18,18,18,
            18,18,18,18,18,18,18,22,22,23,
            23,25,25,25,25,25,25,25,24,24,
            24,24,26,26,26,26,27,27,28,28,
            20,20,7,7,31,31,32,32,32,13,
            13,13,10,10,10,10,10,4,4,4,
            4,4,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,1,1,1,1,1,1,
            1,1,1,1,11,11,11,11,11,11,
            11,11,3,3,3,3,3,3,3,3,
            3,3,3,3,2,2,35,35,35,8,
            8,9,9,12,12,15,15,30,30,29,
            29,19,19,19,36,36,36,36,36,36,
            36,36,36,36,36,36,36,36,36,36,
            36,36,36,36,36,36,36,36,36,36,
            36,36,36,16,16,16,16,16,16,16,
            16,16,16,16,16,16,16,16,16,16,
            16,16,16,16,16,16,16,16,16,16,
            16,37,37,37,37,37,37,37,37,37,
            37,37,37,37,37,37,37,37,37,37,
            37,37,37,37,37,37,37,37,37,38,
            38,38,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,14,14,14,
            14,33,33,33,33,33,33,33,33,34,
            34,34,34,34,34,34,34,34,21,21,
            21,21,21,21,21,21,21,17,17,17,
            17,17,17,17,17,506,536,583,922,535,
            535,535,432,608,203,537,960,202,202,202,
            962,1062,83,357,363,1051,371,4,5,6,
            7,435,371,417,394,1,74,443,459,74,
            74,74,407,533,1164,74,533,533,533,74,
            959,74,308,81,200,346,81,81,81,533,
            103,72,410,533,72,72,72,205,79,81,
            72,79,79,79,72,1170,72,1040,488,632,
            533,202,931,83,488,1030,81,64,69,81,
            67,71,1168,1163,59,503,510,427,1077,517,
            79,62,68,79,1169,517,429,385,427,715,
            463,463,463,684,85,85,85,739,471,471,
            471,763,480,480,480,60,787,484,484,484,
            811,491,491,491,835,495,495,495,1110,83,
            463,859,345,345,345,883,499,499,499,907,
            336,336,336,699,100,996,1088,519,1099,522,
            1154,66,70,519,1013,522,337,1121,83,1132,
            83,188,1143,83,402,1171,1172,1173,972,979,
            1167,977,1178,730,1179,1189,1190,1191,778,826,
            874,947,952,957,958,1192,548,548
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,98,0,
            100,101,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,74,75,76,77,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            98,0,100,101,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,68,69,70,71,72,73,74,75,
            76,77,78,79,80,81,82,83,84,85,
            86,87,88,89,90,91,92,93,94,95,
            96,97,98,0,0,0,102,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,74,75,76,77,78,79,80,81,82,
            83,84,85,86,87,88,89,90,91,92,
            93,94,95,96,97,98,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            74,75,76,77,78,79,80,81,82,83,
            84,85,86,87,88,89,90,91,92,93,
            94,95,96,97,98,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,0,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            95,0,0,0,0,100,101,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,0,16,17,18,19,20,21,22,
            23,0,25,26,27,28,29,30,31,32,
            0,0,11,12,13,14,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            0,99,75,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,0,16,
            17,18,19,20,21,22,23,0,25,11,
            12,13,14,30,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,0,
            16,17,18,19,20,21,22,23,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,24,16,17,18,19,20,21,
            22,23,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,0,16,17,
            18,19,20,21,22,23,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,24,16,17,18,19,20,21,22,23,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,0,16,17,18,19,
            20,21,22,23,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,24,
            16,17,18,19,20,21,22,23,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,0,16,17,18,19,20,21,
            22,23,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,24,16,17,
            18,19,20,21,22,23,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,0,16,17,18,19,20,21,22,23,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,0,0,17,18,0,
            0,0,31,32,0,25,0,0,0,0,
            30,0,1,2,3,4,5,6,7,8,
            24,0,11,15,15,24,0,16,0,0,
            24,24,0,0,0,24,15,26,27,28,
            29,15,34,15,33,0,1,2,3,4,
            5,6,7,8,0,0,11,36,78,0,
            34,16,0,35,0,0,0,0,0,24,
            99,26,27,28,29,0,0,15,33,0,
            1,2,3,4,5,6,7,8,77,0,
            1,2,3,4,5,6,7,8,9,10,
            0,1,2,3,4,5,6,7,8,9,
            10,0,1,2,3,4,5,6,7,8,
            9,10,77,0,35,36,0,1,2,3,
            4,5,6,7,8,9,10,0,1,2,
            3,4,5,6,7,8,9,10,0,1,
            2,3,4,5,6,7,8,9,10,0,
            1,2,3,4,5,6,7,8,9,10,
            0,1,2,3,4,5,6,7,8,9,
            10,0,1,2,3,4,5,6,7,8,
            9,10,0,1,2,3,4,5,6,7,
            8,9,10,0,1,2,3,4,5,6,
            7,8,0,0,0,0,0,0,0,0,
            0,0,0,11,12,13,14,0,0,17,
            18,15,15,15,15,15,15,15,0,0,
            0,0,15,15,0,0,0,0,0,0,
            37,38,0,0,0,0,0,0,0,0,
            0,0,0,0,0,24,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,73,0,0,0,
            0,0,74,76,0,0,80,81,79,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,100,101,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,99,99,99,
            0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            548,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,622,
            621,410,622,622,622,622,622,622,622,622,
            622,622,622,622,622,622,622,622,622,80,
            622,622,548,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,556,625,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,75,620,620,9,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,627,627,627,627,627,627,627,
            627,627,627,548,548,548,627,548,629,629,
            629,629,629,629,629,629,629,629,629,629,
            629,629,629,629,629,629,629,629,629,629,
            629,629,629,629,629,629,629,629,629,629,
            550,629,629,629,629,629,629,629,629,629,
            629,629,629,629,629,629,629,629,629,629,
            629,629,629,629,629,629,629,629,629,629,
            629,629,629,629,629,629,629,629,629,629,
            629,629,629,629,505,629,629,629,629,629,
            629,629,629,629,629,629,629,629,629,629,
            629,629,629,629,629,629,548,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            548,533,533,533,533,533,533,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            533,533,533,370,533,533,533,533,533,533,
            533,533,533,533,533,533,533,533,533,533,
            533,533,533,533,533,548,358,536,536,536,
            536,536,536,536,536,536,535,535,535,535,
            526,535,535,535,535,535,535,535,535,392,
            535,535,535,535,535,535,535,535,504,400,
            529,528,537,537,535,535,535,535,535,535,
            535,535,535,535,535,535,535,535,535,535,
            535,535,535,535,535,535,535,535,535,535,
            535,535,535,535,535,535,535,535,537,454,
            535,442,548,375,425,530,527,514,366,571,
            525,567,568,580,581,578,579,582,566,563,
            564,548,548,548,548,537,537,1,751,751,
            751,751,751,751,751,751,751,751,750,750,
            750,750,548,750,750,750,750,750,750,750,
            750,63,750,750,750,750,750,750,750,750,
            548,548,617,612,612,617,750,750,750,750,
            750,750,750,750,750,750,750,750,750,750,
            750,750,750,750,750,750,750,750,750,750,
            750,750,750,750,750,750,750,750,750,750,
            548,547,750,58,633,633,633,633,633,633,
            633,633,633,633,633,633,633,633,65,633,
            633,633,633,633,633,633,633,548,608,618,
            614,614,618,608,548,463,463,463,463,463,
            463,463,463,463,463,463,463,463,463,548,
            463,463,463,463,463,463,463,463,548,471,
            471,471,471,471,471,471,471,471,471,471,
            471,471,471,551,471,471,471,471,471,471,
            471,471,548,480,480,480,480,480,480,480,
            480,480,480,480,480,480,480,164,480,480,
            480,480,480,480,480,480,548,484,484,484,
            484,484,484,484,484,484,484,484,484,484,
            484,186,484,484,484,484,484,484,484,484,
            548,491,491,491,491,491,491,491,491,491,
            491,491,491,491,491,165,491,491,491,491,
            491,491,491,491,548,495,495,495,495,495,
            495,495,495,495,495,495,495,495,495,186,
            495,495,495,495,495,495,495,495,548,893,
            893,893,893,893,893,893,893,893,893,893,
            893,893,893,166,893,893,893,893,893,893,
            893,893,548,499,499,499,499,499,499,499,
            499,499,499,499,499,499,499,186,499,499,
            499,499,499,499,499,499,548,884,884,884,
            884,884,884,884,884,884,884,884,884,884,
            884,82,884,884,884,884,884,884,884,884,
            4,631,631,631,631,631,631,631,631,631,
            631,619,615,615,619,548,167,427,427,548,
            548,168,459,459,548,607,169,170,27,29,
            607,548,538,539,540,541,542,543,544,545,
            186,12,898,587,588,186,42,895,11,548,
            186,186,548,548,548,901,593,897,899,896,
            467,601,531,592,900,548,885,885,885,885,
            885,885,885,885,548,548,898,584,448,548,
            534,895,22,583,548,548,548,548,548,901,
            4,897,899,896,476,548,548,599,900,186,
            510,510,510,510,510,510,510,510,902,548,
            488,488,488,488,488,488,488,488,488,488,
            28,371,371,371,371,371,371,371,371,371,
            371,86,631,631,631,631,631,631,631,631,
            631,631,902,548,506,508,87,517,517,517,
            517,517,517,517,517,517,517,548,519,519,
            519,519,519,519,519,519,519,519,548,522,
            522,522,522,522,522,522,522,522,522,89,
            631,631,631,631,631,631,631,631,631,631,
            88,631,631,631,631,631,631,631,631,631,
            631,91,631,631,631,631,631,631,631,631,
            631,631,90,631,631,631,631,631,631,631,
            631,631,631,187,736,736,736,736,736,736,
            736,736,7,10,548,548,14,25,24,26,
            21,17,13,616,610,610,616,41,43,427,
            427,595,596,597,586,598,585,594,201,82,
            199,171,600,602,548,548,548,548,548,548,
            748,748,548,548,548,548,548,548,548,548,
            548,548,548,548,548,186,548,548,548,548,
            548,548,548,548,548,548,548,548,548,548,
            548,548,548,548,548,548,748,548,548,548,
            548,548,603,604,548,548,626,431,532,548,
            548,548,548,548,548,548,548,548,548,548,
            548,548,548,748,748,548,548,548,548,548,
            548,548,548,548,548,548,548,548,548,548,
            548,548,548,548,548,548,548,1,4,10
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }
    public final int asb(int index) { return 0; }
    public final int asr(int index) { return 0; }
    public final int nasb(int index) { return 0; }
    public final int nasr(int index) { return 0; }
    public final int terminalIndex(int index) { return 0; }
    public final int nonterminalIndex(int index) { return 0; }
    public final int scopePrefix(int index) { return 0;}
    public final int scopeSuffix(int index) { return 0;}
    public final int scopeLhs(int index) { return 0;}
    public final int scopeLa(int index) { return 0;}
    public final int scopeStateSet(int index) { return 0;}
    public final int scopeRhs(int index) { return 0;}
    public final int scopeState(int index) { return 0;}
    public final int inSymb(int index) { return 0;}
    public final String name(int index) { return null; }
    public final int originalState(int state) { return 0; }
    public final int asi(int state) { return 0; }
    public final int nasi(int state) { return 0; }
    public final int inSymbol(int state) { return 0; }

    /**
     * assert(! goto_default);
     */
    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    /**
     * assert(! shift_default);
     */
    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
