
Options in effect for /Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:

    ACTION-BLOCK=("/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexer.java","/.","./")

    AST-DIRECTORY=""  AST-TYPE="Ast"  NOATTRIBUTES  NOAUTOMATIC-AST  NOBACKTRACK
    BYTE  CONFLICTS  
    DAT-DIRECTORY="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/"
    
    DAT-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexerdcl.data"
    
    DCL-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexerdcl.java"
    NODEBUG  
    DEF-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexerdef.java"
    NOEDIT  NOERROR-MAPS  ESCAPE='$'  
    EXPORT-TERMINALS=("/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaParsersym.java","TK_","")
    EXTENDS-PARSETABLE  FACTORY="new "  FILE-PREFIX="JavaLexer"  
    FILTER="GJavaKWLexer.gi"  NOFIRST  NOFOLLOW  NOGLR  NOGOTO-DEFAULT  
    GRM-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi"
    
    IMP-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexerimp.java"
    
    INCLUDE-DIRECTORY="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/lpg.generator/templates/java;/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/lpg.generator/include/java;"
    LALR=1  LEGACY  LIST  MARGIN=4  MAX-CASES=1024  NAMES=OPTIMIZED  NONT-CHECK
    OR_MARKER='|'  
    OUT-DIRECTORY="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/"
    PACKAGE="org.eclipse.imp.java.formatting.parser"  NOPARENT-SAVE  
    PARSETABLE-INTERFACES="lpg.runtime.ParseTable"  PREFIX="Char_"  PRIORITY  
    PROGRAMMING_LANGUAGE=JAVA  
    PRS-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexerprs.java"
    NOQUIET  READ-REDUCE  REMAP-TERMINALS  NOSCOPES  NOSERIALIZE  
    NOSHIFT-DEFAULT  SINGLE-PRODUCTIONS  NOSOFT-KEYWORDS  NOSTATES  SUFFIX=""  
    SYM-FILE="/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/JavaLexersym.java"
    TAB-FILE="GJavaLexer.t"  TABLE  TEMPLATE="LexerTemplateF.gi"  
    TRACE=CONFLICTS  NOVARIABLES  NOVERBOSE  NOVISITOR  VISITOR-TYPE="Visitor"
    WARNINGS  NOXREF  

/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:580:16:580:21:13155:13160: Warning: The use of the escaped symbol "$Empty" as a keyword has been deprecated. The proper spelling is %Empty
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:37:5:37:15:577:587: Warning: The exported terminal symbol LongLiteral was not generated by any rule in this grammar
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:46:5:46:17:736:748: Warning: The exported terminal symbol GREATER_EQUAL was not generated by any rule in this grammar
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:49:5:49:15:783:793: Warning: The exported terminal symbol RIGHT_SHIFT was not generated by any rule in this grammar
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:50:5:50:24:799:818: Warning: The exported terminal symbol UNSIGNED_RIGHT_SHIFT was not generated by any rule in this grammar
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:60:5:60:21:973:989: Warning: The exported terminal symbol RIGHT_SHIFT_EQUAL was not generated by any rule in this grammar
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:61:5:61:30:995:1020: Warning: The exported terminal symbol UNSIGNED_RIGHT_SHIFT_EQUAL was not generated by any rule in this grammar

Predefined Macros:

    $rule_number
    $rule_text
    $rule_size
    $input_file
    $current_line
    $next_line
    $#identifier
    $symbol_declarations
    $num_rules
    $num_terminals
    $num_nonterminals
    $num_non_terminals
    $num_symbols
    $template
    $file_prefix
    $package
    $ast_package
    $ast_type
    $exp_type
    $prs_type
    $sym_type
    $action_type
    $visitor_type
    $prefix
    $suffix
    $entry_name
    $entry_marker


Filter Macros:

    $$GJavaKWLexer


Exported symbols:

    EOF_TOKEN
    IDENTIFIER
    IntegerLiteral
    LongLiteral
    FloatingPointLiteral
    DoubleLiteral
    CharacterLiteral
    StringLiteral
    PLUS_PLUS
    MINUS_MINUS
    EQUAL_EQUAL
    LESS_EQUAL
    GREATER_EQUAL
    NOT_EQUAL
    LEFT_SHIFT
    RIGHT_SHIFT
    UNSIGNED_RIGHT_SHIFT
    PLUS_EQUAL
    MINUS_EQUAL
    MULTIPLY_EQUAL
    DIVIDE_EQUAL
    AND_EQUAL
    OR_EQUAL
    XOR_EQUAL
    REMAINDER_EQUAL
    LEFT_SHIFT_EQUAL
    RIGHT_SHIFT_EQUAL
    UNSIGNED_RIGHT_SHIFT_EQUAL
    OR_OR
    AND_AND
    PLUS
    MINUS
    NOT
    REMAINDER
    XOR
    AND
    MULTIPLY
    OR
    TWIDDLE
    DIVIDE
    GREATER
    LESS
    LPAREN
    RPAREN
    LBRACE
    RBRACE
    LBRACKET
    RBRACKET
    SEMICOLON
    QUESTION
    AT
    COLON
    COMMA
    DOT
    EQUAL
    ELLIPSIS
    VAR_Statement
    VAR_BlockStatements
    VAR_Expression
    VAR_TypeDeclaration
    VAR_ImportDeclarations
    VAR_ImportDeclaration
    VAR_ClassBodyDeclaration
    VAR_PackageName
    VAR_TypeName
    VAR_MethodName
    VAR_ArgumentListopt
    VAR_ArgumentList
    VAR_IDENTIFIER


Defined Symbols:



    $eof_token
    /.$_EOF_TOKEN./


    $additional_interfaces
    /., ILexer ./


    $super_stream_class
    /.$file_prefix$LpgLexStream./


    $prs_stream_class
    /.IPrsStream./


    $prs_stream
    /. // macro prs_stream is deprecated. Use function getPrsStream
                      getPrsStream()./


    $setSym1
    /. // macro setSym1 is deprecated. Use function setResult
                   lexParser.setSym1./


    $setResult
    /. // macro setResult is deprecated. Use function setResult
                     lexParser.setSym1./


    $getSym
    /. // macro getSym is deprecated. Use function getLastToken
                  lexParser.getSym./


    $getToken
    /. // macro getToken is deprecated. Use function getToken
                    lexParser.getToken./


    $getLeftSpan
    /. // macro getLeftSpan is deprecated. Use function getLeftSpan
                       lexParser.getFirstToken./


    $getRightSpan
    /. // macro getRightSpan is deprecated. Use function getRightSpan
                        lexParser.getLastToken./


    $Header
    /.
                    //
                    // Rule $rule_number:  $rule_text
                    //
                    ./


    $DefaultAction
    /.$Header$case $rule_number: { ./


    $BeginAction
    /.$DefaultAction./


    $EndAction
    /.            break;
                    }./


    $BeginJava
    /.$BeginAction
                    $symbol_declarations./


    $EndJava
    /.$EndAction./


    $NoAction
    /.$Header$case $rule_number:
                        break; ./


    $BeginActions
    /.
            public void ruleAction(int ruleNumber)
            {
                switch(ruleNumber)
                {./


    $SplitActions
    /.
                        default:
                            ruleAction$rule_number(ruleNumber);
                            break;
                    }
                    return;
                }
    
                public void ruleAction$rule_number(int ruleNumber)
                {
                    switch (ruleNumber)
                    {./


    $EndActions
    /.
                    default:
                        break;
                }
                return;
            }./


    $kw_lexer_class
    /.$GJavaKWLexer./


Aliases:

    \u0080..\ufffe ::= AfterASCII
    ' ' ::= Space
    NewLine ::= LF
    Return ::= CR
    HorizontalTab ::= HT
    FormFeed ::= FF
    '"' ::= DoubleQuote
    "'" ::= SingleQuote
    '%' ::= Percent
    '|' ::= VerticalBar
    ! ::= Exclamation
    @ ::= AtSign
    ` ::= BackQuote
    ~ ::= Tilde
    # ::= Sharp
    '$' ::= DollarSign
    & ::= Ampersand
    ^ ::= Caret
    : ::= Colon
    ; ::= SemiColon
    \ ::= BackSlash
    { ::= LeftBrace
    } ::= RightBrace
    [ ::= LeftBracket
    ] ::= RightBracket
    ? ::= QuestionMark
    , ::= Comma
    . ::= Dot
    < ::= LessThan
    > ::= GreaterThan
    + ::= Plus
    - ::= Minus
    / ::= Slash
    * ::= Star
    ( ::= LeftParen
    ) ::= RightParen
    = ::= Equal


Eof:

    EOF

Terminals:

    CtlCharNotWS
    LF
    CR
    HT
    FF
    a
    b
    c
    d
    e
    f
    g
    h
    i
    j
    k
    l
    m
    n
    o
    p
    q
    r
    s
    t
    u
    v
    w
    x
    y
    z
    _
    A
    B
    C
    D
    E
    F
    G
    H
    I
    J
    K
    L
    M
    N
    O
    P
    Q
    R
    S
    T
    U
    V
    W
    X
    Y
    Z
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    AfterASCII
    Space
    DoubleQuote
    SingleQuote
    Percent
    VerticalBar
    Exclamation
    AtSign
    BackQuote
    Tilde
    Sharp
    DollarSign
    Ampersand
    Caret
    Colon
    SemiColon
    BackSlash
    LeftBrace
    RightBrace
    LeftBracket
    RightBracket
    QuestionMark
    Comma
    Dot
    LessThan
    GreaterThan
    Plus
    Minus
    Slash
    Star
    LeftParen
    RightParen
    Equal
    EOF


Soft Keywords:



Rules:

0      '$accept' ::= Token

1      Token ::= Identifier
2      Token ::= '$' { I D E N T I F I E R IntegerOpt }
3      Token ::= '$' { B l o c k S t a t e m e n t s IntegerOpt }
4      Token ::= '$' { A r g u m e n t L i s t o p t IntegerOpt }
5      Token ::= '$' { A r g u m e n t L i s t IntegerOpt }
6      Token ::= '$' { S t a t e m e n t IntegerOpt }
7      Token ::= '$' { E x p r e s s i o n IntegerOpt }
8      Token ::= '$' { T y p e D e c l a r a t i o n IntegerOpt }
9      Token ::= '$' { I m p o r t D e c l a r a t i o n IntegerOpt }
10     Token ::= '$' { I m p o r t D e c l a r a t i o n s IntegerOpt }
11     Token ::= '$' { C l a s s B o d y D e c l a r a t i o n IntegerOpt }
12     Token ::= '$' { P a c k a g e N a m e IntegerOpt }
13     Token ::= '$' { T y p e N a m e IntegerOpt }
14     Token ::= '$' { M e t h o d N a m e IntegerOpt }
15     Token ::= '"' SLBody '"'
16     Token ::= "'" NotSQ "'"
17     Token ::= IntegerLiteral
18     Token ::= FloatingPointLiteral
19     Token ::= DoubleLiteral
20     Token ::= / * Inside Stars /
21     Token ::= SLC
22     Token ::= WS
23     Token ::= +
24     Token ::= -
25     Token ::= *
26     Token ::= /
27     Token ::= (
28     Token ::= )
29     Token ::= =
30     Token ::= ,
31     Token ::= :
32     Token ::= ;
33     Token ::= ^
34     Token ::= '%'
35     Token ::= ~
36     Token ::= '|'
37     Token ::= &
38     Token ::= <
39     Token ::= >
40     Token ::= .
41     Token ::= !
42     Token ::= [
43     Token ::= ]
44     Token ::= {
45     Token ::= }
46     Token ::= ?
47     Token ::= @
48     Token ::= + +
49     Token ::= - -
50     Token ::= = =
51     Token ::= < =
52     Token ::= ! =
53     Token ::= < <
54     Token ::= + =
55     Token ::= - =
56     Token ::= * =
57     Token ::= / =
58     Token ::= & =
59     Token ::= '|' =
60     Token ::= ^ =
61     Token ::= '%' =
62     Token ::= < < =
63     Token ::= '|' '|'
64     Token ::= & &
65     Token ::= . . .
66     IntegerLiteral -> Integer
67                     | Integer LetterLl
68                     | 0 LetterXx HexDigits
69                     | 0 LetterXx HexDigits LetterLl
70     DoubleLiteral -> Decimal
71                    | Decimal LetterForD
72                    | Decimal Exponent
73                    | Decimal Exponent LetterForD
74                    | Integer Exponent
75                    | Integer Exponent LetterForD
76                    | Integer LetterForD
77     FloatingPointLiteral -> Decimal LetterForF
78                           | Decimal Exponent LetterForF
79                           | Integer Exponent LetterForF
80                           | Integer LetterForF
81     Inside ::= Inside Stars NotSlashOrStar
82              | Inside /
83              | Inside NotSlashOrStar
84              | $Empty
85     Stars -> *
86            | Stars *
87     SLC ::= / /
88           | SLC NotEol
89     SLBody -> $Empty
90             | SLBody NotDQ
91     IntegerOpt -> $Empty
92                 | Integer
93     Integer -> Digit
94              | Integer Digit
95     HexDigits -> HexDigit
96                | HexDigits HexDigit
97     Decimal ::= . Integer
98               | Integer .
99               | Integer . Integer
100    Exponent ::= LetterEe Integer
101               | LetterEe + Integer
102               | LetterEe - Integer
103    WSChar -> Space
104            | LF
105            | CR
106            | HT
107            | FF
108    Letter -> LowerCaseLetter
109            | UpperCaseLetter
110            | _
111            | '$'
112            | \u0080..\ufffe
113    LowerCaseLetter -> a
114                     | b
115                     | c
116                     | d
117                     | e
118                     | f
119                     | g
120                     | h
121                     | i
122                     | j
123                     | k
124                     | l
125                     | m
126                     | n
127                     | o
128                     | p
129                     | q
130                     | r
131                     | s
132                     | t
133                     | u
134                     | v
135                     | w
136                     | x
137                     | y
138                     | z
139    UpperCaseLetter -> A
140                     | B
141                     | C
142                     | D
143                     | E
144                     | F
145                     | G
146                     | H
147                     | I
148                     | J
149                     | K
150                     | L
151                     | M
152                     | N
153                     | O
154                     | P
155                     | Q
156                     | R
157                     | S
158                     | T
159                     | U
160                     | V
161                     | W
162                     | X
163                     | Y
164                     | Z
165    Digit -> 0
166           | 1
167           | 2
168           | 3
169           | 4
170           | 5
171           | 6
172           | 7
173           | 8
174           | 9
175    OctalDigit -> 0
176                | 1
177                | 2
178                | 3
179                | 4
180                | 5
181                | 6
182                | 7
183    a..f -> a
184          | b
185          | c
186          | d
187          | e
188          | f
189          | A
190          | B
191          | C
192          | D
193          | E
194          | F
195    HexDigit -> Digit
196              | a..f
197    OctalDigits3 -> OctalDigit
198                  | OctalDigit OctalDigit
199                  | OctalDigit OctalDigit OctalDigit
200    LetterForD -> D
201                | d
202    LetterForF -> F
203                | f
204    LetterLl -> L
205              | l
206    LetterEe -> E
207              | e
208    LetterXx -> X
209              | x
210    WS -> WSChar
211        | WS WSChar
212    Identifier -> Letter
213                | Identifier Letter
214                | Identifier Digit
215    SpecialNotStar -> +
216                    | -
217                    | /
218                    | (
219                    | )
220                    | '"'
221                    | !
222                    | @
223                    | `
224                    | ~
225                    | '%'
226                    | &
227                    | ^
228                    | :
229                    | ;
230                    | "'"
231                    | \
232                    | '|'
233                    | {
234                    | }
235                    | [
236                    | ]
237                    | ?
238                    | ,
239                    | .
240                    | <
241                    | >
242                    | =
243                    | #
244    SpecialNotSlash -> +
245                     | -
246                     | (
247                     | )
248                     | '"'
249                     | !
250                     | @
251                     | `
252                     | ~
253                     | '%'
254                     | &
255                     | ^
256                     | :
257                     | ;
258                     | "'"
259                     | \
260                     | '|'
261                     | {
262                     | }
263                     | [
264                     | ]
265                     | ?
266                     | ,
267                     | .
268                     | <
269                     | >
270                     | =
271                     | #
272    SpecialNotDQ -> +
273                  | -
274                  | /
275                  | (
276                  | )
277                  | *
278                  | !
279                  | @
280                  | `
281                  | ~
282                  | '%'
283                  | &
284                  | ^
285                  | :
286                  | ;
287                  | "'"
288                  | '|'
289                  | {
290                  | }
291                  | [
292                  | ]
293                  | ?
294                  | ,
295                  | .
296                  | <
297                  | >
298                  | =
299                  | #
300    SpecialNotSQ -> +
301                  | -
302                  | *
303                  | (
304                  | )
305                  | '"'
306                  | !
307                  | @
308                  | `
309                  | ~
310                  | '%'
311                  | &
312                  | ^
313                  | :
314                  | ;
315                  | /
316                  | '|'
317                  | {
318                  | }
319                  | [
320                  | ]
321                  | ?
322                  | ,
323                  | .
324                  | <
325                  | >
326                  | =
327                  | #
328    NotSlashOrStar -> Letter
329                    | Digit
330                    | SpecialNotSlash
331                    | WSChar
332    Eol -> LF
333         | CR
334    NotEol -> Letter
335            | Digit
336            | Space
337            | *
338            | SpecialNotStar
339            | HT
340            | FF
341            | CtlCharNotWS
342    NotDQ -> Letter
343           | Digit
344           | SpecialNotDQ
345           | Space
346           | HT
347           | FF
348           | EscapeSequence
349           | \ u HexDigit HexDigit HexDigit HexDigit
350           | \ OctalDigit
351    NotSQ -> Letter
352           | Digit
353           | SpecialNotSQ
354           | Space
355           | HT
356           | FF
357           | EscapeSequence
358           | \ u HexDigit HexDigit HexDigit HexDigit
359           | \ OctalDigits3
360    EscapeSequence -> \ b
361                    | \ t
362                    | \ n
363                    | \ f
364                    | \ r
365                    | \ '"'
366                    | \ "'"
367                    | \ \
/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:682:5:682:7:15953:15955: Warning: The nonterminal Eol is useless.


/Users/rmfuhrer/eclipse/workspaces/imp-3.3-release/org.eclipse.imp.java.core/src/org/eclipse/imp/java/formatting/parser/GJavaLexer.gi:178:5:178:9:3534:3538: Informative: Grammar is  LALR(1).

Number of Terminals: 102
Number of Nonterminals: 39
Number of Productions: 368
Number of Single Productions: 254
Number of Items: 1035
Number of States: 218
Number of Shift actions: 684
Number of Goto actions: 99
Number of Shift/Reduce actions: 698
Number of Goto/Reduce actions: 64
Number of Reduce actions: 533
Number of Shift-Reduce conflicts: 0
Number of Reduce-Reduce conflicts: 0

Number of entries in base Action Table: 381
Additional space required for compaction of Action Table: 0.2%

Number of unique terminal states: 209
Number of Shift actions saved by merging: 90
Number of Conflict points saved by merging: 0
Number of Reduce actions saved by merging: 9
Number of Reduce saved by default: 509

Number of entries in Terminal Action Table: 1516
Additional space required for compaction of Terminal Table: 5.9%

Actions in Compressed Tables:
     Number of Shifts: 594
     Number of Shift/Reduces: 698
     Number of Gotos: 99
     Number of Goto/Reduces: 64
     Number of Reduces: 15
     Number of Defaults: 50

Parsing Tables storage:
    Storage required for BASE_CHECK: 368 Bytes
    Storage required for BASE_ACTION: 1502 Bytes
    Storage required for TERM_CHECK: 1635 Bytes
    Storage required for TERM_ACTION: 3214 Bytes
